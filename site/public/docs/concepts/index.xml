<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concepts on LXD Compose</title>
    <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/</link>
    <description>Recent content in Concepts on LXD Compose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mottainaici.github.io/lxd-compose-docs/docs/concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Environements</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/env/</guid>
      <description>Environments #  The environments are characterized of from these properties or elements:
  version: describe the version of the specifications. At the moment the only version supported is &amp;ldquo;1&amp;rdquo;.
  template_engine: under the template_engine section is configured the engine used for create project files. The available engines are jinja2 (it uses j2cli tool and jinja2 framework like for Ansible) and mottainai that it uses Golang&amp;rsquo;s template render. For the jinja2 template is possible set additional options for the j2cli through opts field.</description>
    </item>
    
    <item>
      <title>Groups</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/group/</guid>
      <description>Groups #  The group is used to define for example a list of nodes that supply a particular service. There isn&amp;rsquo;t a real limitation on this but only common/best practices. lxd-compose hasn&amp;rsquo;t limit to use multiple groups with only one node instead of a single group with multiple nodes.
The name of the group must be unique inside all loaded environments. This permits to use runtime options to disable/enable groups on deploy a project.</description>
    </item>
    
    <item>
      <title>Hooks</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/hook/</guid>
      <description>Hooks #  The hooks are the operations that could be done to configure the target services.
Inside the hook you could define:
  event: identify the type of the hook
  node: an optional attribute that define the name of the container where to run the commands. There is a special node host that is used to run the commands on the host where is running lxd-compose</description>
    </item>
    
    <item>
      <title>Nodes</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/node/</guid>
      <description>Nodes #  The node identify the container created to a specific LXD instance defined by the connection attribute available at group level.
The name of the node must be unique inside all loaded environments. In the real the limitation is mandatory only for the same LXD instance, but lxd-compose validate at the moment doesn&amp;rsquo;t permit to use the same name between different groups or projects.  In particular, inside the node you could define:</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/project/</guid>
      <description>Projects #  The project is used to define for example a way to identify the deploy of one or more services (inside different groups).
The name of the project must be unique inside all loaded environments.  In particular, inside the project you could define:
  name: an unique identifier of the project. I suggest to avoid spaces.
  description: an user friendly description of the project mission.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mottainaici.github.io/lxd-compose-docs/docs/concepts/variable/</guid>
      <description>Variables #  One of the more important feature of lxd-compose is the management of the variables.
A variable could be identified by a simple key and a value that could be a simple string/integer or a complex struct.
Every key will be available inside the execution of the hooks as an environemnt variable, in the case of simple type will be available As-is, instead for complex struct lxd-compose will convert it in JSON string to parse for example with jq tool.</description>
    </item>
    
  </channel>
</rss>
